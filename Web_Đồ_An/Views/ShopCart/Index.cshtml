@using Web_Đồ_An.Common
@model IEnumerable<Web_Đồ_An.Models.ShopCart>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Gio hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">
<link rel="stylesheet" href="https://cdn-uicons.flaticon.com/uicons-bold-straight/css/uicons-bold-straight.css">
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<link rel="stylesheet" type="text/css" href="~/styles/categories_styles.css">
<link rel="stylesheet" type="text/css" href="~/styles/categories_responsive.css">


<div class="container product_section_container">
    <div class="row">
        <div class="col product_section clearfix">

            <!-- Breadcrumbs -->

            <div class="breadcrumbs d-flex flex-row align-items-center">
                <ul>
                    <li><a href="index.html">Trang chủ</a></li>
                    <li class="active"><a href="/"><i class="fa fa-angle-right" aria-hidden="true"></i>Giỏ hàng</a></li>
                </ul>
            </div>

            <!-- Sidebar -->
            <!-- Main Content -->

            <div class="col-md-12" id="load_data">


                <table class="table">
                    <tr class="text-center">
                        <th>STT</th>
                        <th>Ảnh sản phẩm</th>
                        <th>Tên sản phẩm</th>
                        <th>Giá tiền  </th>
                        <th style="width:100px;">Số lượng</th>
                        <th>Thành tiền</th>
                        <th style="width:200px;">

                        </th>
                    </tr>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            var i = 1;

                            foreach (var item in Model)
                            {
                                var money = item.PriceSale * item.Quantity;

                                <tr class="text-center" id="trow_@item.ProductId">
                                    <td>@(i)</td>
                                    <td><img src="@item.Image" width="60" /></td>
                                    <td class="product_name">
                                        <a href="~/Products/Detail/@item.ProductId">@item.Title</a>
                                    </td>
                                    <td>
                                        @if (item.PriceSale > 0)
                                        {
                                            <div class="product_price" data-price="@item.PriceSale">@Web_Đồ_An.Common.Common.FormatNumber(item.PriceSale, 0)<span>@Web_Đồ_An.Common.Common.FormatNumber(item.Price, 0)</span></div>
                                            @*<input type="hidden" value="@item.PriceSale" />*@
                                        }
                                        else
                                        {
                                            <div data-price="@item.Price" class="product_price">@Web_Đồ_An.Common.Common.FormatNumber(item.Price, 0)</div>
                                            <div style="display:none;" class="in_product_price"> @item.Price</div>
                                        }
                                    </td>

                                    <td>
                                        <div class="box-cart-item-btn">
                                            <button class="btn qty_btn"><i class="fa fa-minus"></i></button>
                                            <input type="text" class="qty_input" value="@item.Quantity" data-max-quantity="@item.MaxQuantity" type="text" />
                                            <button class="btn qty_btn"><i class="fa fa-plus"></i></button>
                                        </div>
                                        <p>SL: @item.MaxQuantity</p>
                                    </td>


                                    <td class="product-subtotal">
                                        <p data-money="@money" class="total-money">
                                            <span id="money">@string.Format("{0:#,##0}", @money)</span>VND
                                        </p>
                                    </td>
                                    <td>
                                        <a href="/shopcart/remove/?id=@item.ProductId" data-id="@item.ProductId" class="btn btn-sm btn-danger remove">Xóa</a>
                                        <a href="/shopcart/Update/?id=@item.ProductId" data-id="@item.ProductId" class="btn btn-sm btn-success update">Cập nhật</a>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                        else
                        {
                            <tr>
                                <th colspan="7">Không có sản phẩm trong giỏ hàng!!</th>
                            </tr>
                        }
                    </tbody>

                </table>
            </div>
            <div class="box-cart-bill">
                <h3> Tóm tắt đơn hàng </h3>

                <p>
                    Số sản phẩm <span>@ViewBag.Count</span>


                </p>

                <div class="cart-box cart-layout">
                    <div>
                        Tổng tiền :<span id="totalMoney">
                            @string.Format("{0:#,##0}", ViewBag.Total)
                        </span> VND
                    </div>
                    <div class="group-btn">
                        @if (HttpContextAccessor.HttpContext.Session.GetString("Member") != null)
                        {
                            <a id="buyButton" asp-action="Order" asp-controller="ShopCart">Mua hàng</a>
                        }
                        else
                        {
                            <a id="buyButton" asp-action="Login" asp-controller="Customer">Mua hàng</a>
                        }
                        <a href="/products" class="btn">Tiếp tục mua hàng</a>
                    </div>
                </div>
            </div>

        </div>


    </div>
</div>


<script src="~/lib/jquery/dist/jquery.js"></script>

@section scripts {

    <script>
        $(document).ready(function () {


            $("#buyButton").click(function (e) {
                // Kiểm tra số lượng hàng tr giỏ hàng có sản phẩm hay không
                if ($("tbody tr").length === 1 && $("tbody tr td").length === 1) {
                    // alert("Bạn vẫn chưa chọn sản phẩm nào để mua.");
                    Swal.fire({
                        title: "Bạn vẫn chưa chọn sản phẩm nào.",
                        showClass: {
                            popup: `
                                                    animate__animated
                                                    animate__fadeInUp
                                                    animate__faster
                                                  `
                        },
                        hideClass: {
                            popup: `
                                                    animate__animated
                                                    animate__fadeOutDown
                                                    animate__faster
                                                  `
                        }
                    });
                    e.preventDefault();
                } else {
                    window.location.href = '@Url.Action("Order", "ShopCart")';
                }
            });
            debugger;
            //Tawng
            $('.qty_btn .fa-plus').click(function () {
                console.log("fa-plus");
                //debugger;
                let qty = parseInt($(this).parent().siblings('.qty_input').val()); // 1
                //let qty = parseInt($(this).parent().siblings('.quantity_value').text().trim()); // lấy giá trị ô input
                console.log(qty)
                let price = parseFloat($(this).closest('td').prev('td').find('div').attr("data-price"));

                let maxQuantity = parseInt($(this).parent().siblings('.qty_input').data("max-quantity"));
                console.log(price);
                // let price = parseFloat($(this).parent().parent().siblings().children("span.new-price").attr("data-price"));
                if (qty < (maxQuantity + 1)) {
                    qty += 1;
                }

                let money = qty * price; // Tính thành tiền
                console.log(money);

                //hiển thị dữ liệu
                parseInt($(this).parent().siblings('.qty_input').val(qty)); //hiển thị lại số lượng
                //console.log("ok", qty, price, money);
                //cập nhập lại số lượng trong sesion
                let id = $(this).parent().parent().parent().siblings('td').children('.update').attr("data-id");
                let href = "/shopcart/Update/?id=" + id + "&quantity=" + qty; // link cập nhật sản phẩm trong giỏ hàng
                $(this).parent().parent().parent().siblings('td').children('.update').attr("href", href);
                $(this).parent().parent().parent().siblings('.product-subtotal').children('.total-money').attr("data-money", money);
                let total_money = formatMoney(money, 0, ",", ".");
                // console.log("ok", qty, price, money, total_money);
                $(this).parent().parent().parent().siblings('.product-subtotal').children('.total-money').children("#money").text(total_money);
                let totalMoney = formatMoney(total(), 0, ",", ".");
                $("#totalMoney").text(totalMoney); // hiển thị tổng tiền
            })

            $(".qty_btn").click(function () {
                var $input = $(this).siblings(".qty_input");
                var currentVal = parseInt($input.val());
                var maxVal = parseInt($input.data("max-quantity"));
                console.log(currentVal, maxVal)
                if (currentVal <=  maxVal) {
                    $input.val(currentVal);
                }
                else  {
                    $input.val(maxVal);
                    Swal.fire({
                        title: "Sản phẩm còn lại là " + maxVal + ".Bạn vui lòng không mua quá số lượng!",
                        showClass: {
                            popup: `
                          animate__animated
                          animate__fadeInUp
                          animate__faster
                        `
                        },
                        hideClass: {
                            popup: `
                          animate__animated
                          animate__fadeOutDown
                          animate__faster
                        `
                        }
                    });
                }
            });
            //giam
            $('.qty_btn .fa-minus').click(function () {
                console.log("fa-minus");
                //debugger;
                let qty = parseInt($(this).parent().siblings('.qty_input').val()); // 1
                //let qty = parseInt($(this).parent().siblings('.quantity_value').text().trim()); // lấy giá trị ô input
                console.log(qty)
                let price = parseFloat($(this).closest('td').prev('td').find('div').attr("data-price"));
                console.log(price);
                // let price = parseFloat($(this).parent().parent().siblings().children("span.new-price").attr("data-price"));

                qty -= 1;
                let money = qty * price; // Tính thành tiền
                console.log(money);

                //hiển thị dữ liệu
                parseInt($(this).parent().siblings('.qty_input').val(qty)); //hiển thị lại số lượng
                //console.log("ok", qty, price, money);
                //cập nhập lại số lượng trong sesion
                let id = $(this).parent().parent().parent().siblings('td').children('.update').attr("data-id");
                let href = "/shopcart/Update/?id=" + id + "&quantity=" + qty; // link cập nhật sản phẩm trong giỏ hàng
                $(this).parent().parent().parent().siblings('td').children('.update').attr("href", href);
                $(this).parent().parent().parent().siblings('.product-subtotal').children('.total-money').attr("data-money", money);
                let total_money = formatMoney(money, 0, ",", ".");
                console.log("ok", qty, price, money, total_money);
                $(this).parent().parent().parent().siblings('.product-subtotal').children('.total-money').children("#money").text(total_money);
                let totalMoney = formatMoney(total(), 0, ",", ".");
                $("#totalMoney").text(totalMoney); // hiển thị tổng tiền
                //$("#totalMoneyPay").text(totalMoney);// hiển thị tổng tiền
            })

            function total() {
                let totalMoney = 0;
                $("p.total-money").each(function () {
                    console.log($(this));
                    console.log($(this).attr("data-money"));
                    let money = parseFloat($(this).attr("data-money"));
                    console.log("total-money", money);
                    totalMoney += money;
                });
                return totalMoney;
            }

            // total();

        });
        function formatMoney(amount, decimalCount = 2, decimal = ".", thousands = ",") {
            try {
                decimalCount = Math.abs(decimalCount);
                decimalCount = isNaN(decimalCount) ? 2 : decimalCount;
                const negativeSign = amount < 0 ? "-" : "";
                let i = parseInt(amount = Math.abs(Number(amount) ||
                    0).toFixed(decimalCount)).toString();
                let j = (i.length > 3) ? i.length % 3 : 0;
                return negativeSign +
                    (j ? i.substr(0, j) + thousands : '') +
                    i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands) +
                    (decimalCount ? decimal + Math.abs(amount -
                        i).toFixed(decimalCount).slice(2) : "");
            } catch (e) {
                console.log(e)
            }
        };
    </script>
}
<style>
    .swal2-container.swal2-center.swal2-backdrop-show {
        position: absolute;
        display: flex;
        justify-content: center;
    }
</style>